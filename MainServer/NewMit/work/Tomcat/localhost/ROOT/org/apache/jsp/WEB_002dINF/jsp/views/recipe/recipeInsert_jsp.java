/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.5
 * Generated at: 2024-05-31 13:13:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.views.recipe;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class recipeInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/rhkgk/.gradle/caches/modules-2/files-2.1/org.glassfish.web/jakarta.servlet.jsp.jstl/3.0.1/78909a1354585b2a7a2d3b4e348fceff8b6d180/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1711816315268L));
    _jspx_dependants.put("jar:file:/C:/Users/rhkgk/.gradle/caches/modules-2/files-2.1/org.glassfish.web/jakarta.servlet.jsp.jstl/3.0.1/78909a1354585b2a7a2d3b4e348fceff8b6d180/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>뉴밋</title>\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"/favicon/apple-icon-57x57.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/favicon/apple-icon-60x60.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"/favicon/apple-icon-72x72.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/favicon/apple-icon-76x76.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"/favicon/apple-icon-114x114.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/favicon/apple-icon-120x120.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"/favicon/apple-icon-144x144.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/favicon/apple-icon-152x152.png\">\r\n");
      out.write("    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/favicon/apple-icon-180x180.png\">\r\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\"  href=\"/favicon/android-icon-192x192.png\">\r\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon/favicon-32x32.png\">\r\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/favicon/favicon-96x96.png\">\r\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon/favicon-16x16.png\">\r\n");
      out.write("    <link rel=\"manifest\" href=\"/favicon/manifest.json\">\r\n");
      out.write("    <meta name=\"msapplication-TileColor\" content=\"#ffffff\">\r\n");
      out.write("    <meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\">\r\n");
      out.write("    <meta name=\"theme-color\" content=\"#ffffff\">\r\n");
      out.write("    <meta\r\n");
      out.write("            name=\"식자재 관리의 새로운 방법을 만나다, 뉴밋.\"\r\n");
      out.write("            content=\"식자재 관리와 요리의 즐거움을 일깨워 주는 서비스인 뉴밋은 레시피 공유, 식자재 관리등을 개성있게 할 수 있는 서비스 입니다.\"\r\n");
      out.write("    >\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/styles/slick.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/styles/styles.css\">\r\n");
      out.write("    <script src=\"/scripts/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("    <script src=\"/scripts/slick.min.js\"></script>\r\n");
      out.write("    <script src=\"/scripts/scripts.js\"></script>\r\n");
      out.write("    <script src=\"/component/recipeInsertComponents.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("\r\n");
      out.write("        window.onload = function() {\r\n");
      out.write("            commonUtil.enableToFooter(false);\r\n");
      out.write("\r\n");
      out.write("            stepInsert();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function recipeIntroImageOnChange(e) {\r\n");
      out.write("\r\n");
      out.write("            const file = e.files[0]; // 선택된 파일\r\n");
      out.write("\r\n");
      out.write("            // FileReader 객체 생성\r\n");
      out.write("            const reader = new FileReader();\r\n");
      out.write("\r\n");
      out.write("            // 파일을 읽기 시작할 때 실행되는 이벤트 핸들러\r\n");
      out.write("            reader.onload = function(handler) {\r\n");
      out.write("                // 읽은 데이터를 img 요소의 src 속성에 설정하여 이미지를 표시\r\n");
      out.write("                document.getElementById(\"recipeIntroImageBanner\").src = handler.target.result; // 첨부한 이미지를 보여주도록\r\n");
      out.write("                document.getElementById(\"recipeIntroImageBanner\").style.display = \"block\"; // 첨부한 이미지를 보여주도록\r\n");
      out.write("                document.getElementById(\"imageUploaderLabel\").style.display = \"none\"; // 첨부할 경우 첨부요청 영역 제거\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 파일을 읽기\r\n");
      out.write("            reader.readAsDataURL(file);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function stepInsert() {\r\n");
      out.write("            recipeInsertComponents.insertStep();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        async function saveBtnClick() {\r\n");
      out.write("            const requestData = new Object();\r\n");
      out.write("\r\n");
      out.write("            const recipeInfo = await commonUtil.formToObjectWithImage(document.getElementById(\"recipeInfoForm\"));\r\n");
      out.write("\r\n");
      out.write("            recipeInfo['recipeIntroImageFileNm'] = document.getElementById(\"recipeIntroImageInput\").files[0].name;\r\n");
      out.write("            recipeInfo['recipeIntroImageFileExtension'] = commonUtil.getExtensionFromBase64(recipeInfo['recipeIntroImage']);\r\n");
      out.write("\r\n");
      out.write("            const recipeStepInfoList = new Array();\r\n");
      out.write("            for(let currentStep of document.getElementById(\"recipeInsertStepsOl\").children) {\r\n");
      out.write("                const recipeStepInfoObject = await commonUtil.formToObjectWithImage(currentStep.getElementsByTagName(\"form\")[0]);\r\n");
      out.write("\r\n");
      out.write("                recipeStepInfoList.push(recipeStepInfoObject);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            requestData['recipeInfo'] = recipeInfo;\r\n");
      out.write("            requestData['recipeStepInfoList'] = recipeStepInfoList;\r\n");
      out.write("\r\n");
      out.write("            httpRequest('POST', '/recipe/insertRecipe', JSON.stringify(requestData), function(success) {\r\n");
      out.write("                alert(\"레시피 등록을 성공했습니다.\");\r\n");
      out.write("                window.location.href = '/recipe/viewWrittenRecipeList';\r\n");
      out.write("            }, function(fail) {\r\n");
      out.write("                alert(\"레시피 등록 실패\");\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"wrap\">\r\n");
      out.write("        <section>\r\n");
      out.write("            <div class=\"recipeInsert\">\r\n");
      out.write("                <form id=\"recipeInfoForm\">\r\n");
      out.write("                    <div class=\"recipeInsertThumbnail\">\r\n");
      out.write("                        <h2>레시피 정보</h2>\r\n");
      out.write("                        <div class=\"imageUploader\">\r\n");
      out.write("                            <label id=\"imageUploaderLabel\">\r\n");
      out.write("                                <input id=\"recipeIntroImageInput\" name=\"recipeIntroImage\" onchange=\"javascript:recipeIntroImageOnChange(this)\" type=\"file\" accept=\"image/*\" hidden>\r\n");
      out.write("                                <i class=\"ic-camera\"></i>\r\n");
      out.write("                                <p>식자재 이미지를 추가해주세요</p>\r\n");
      out.write("                            </label>\r\n");
      out.write("                            <img id=\"recipeIntroImageBanner\" src=\"/images/food/temp.png\" style=\"display: none\" alt=\"\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"ipt\">\r\n");
      out.write("                            <span>레시피 제목</span>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <input name=\"recipeTitle\" id=\"recipeTitle\" type=\"text\" placeholder=\"제목을 입력해 주세요\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"ipt\">\r\n");
      out.write("                            <span>레시피 설명</span>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <textarea name=\"recipeMainDescription\" id=\"recipeMainDescription\"></textarea>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"ipt\">\r\n");
      out.write("                            <span>레시피 카테고리</span>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <select name=\"recipeCategoryByType\" id=\"recipeCategoryByType\">\r\n");
      out.write("                                    <option value=\"0\">종류별</option>\r\n");
      out.write("                                    <option value=\"1\">육류</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                                <select name=\"recipeCategoryByOccasion\" id=\"recipeCategoryByOccasion\">\r\n");
      out.write("                                    <option value=\"0\">상황별</option>\r\n");
      out.write("                                    <option value=\"1\">파티용</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"ipt\">\r\n");
      out.write("                            <span>요리기준</span>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <select name=\"recipeCriteriaByCookingServing\" id=\"recipeCriteriaByCookingServing\">\r\n");
      out.write("                                    <option value=\"1\">1인분</option>\r\n");
      out.write("                                    <option value=\"2\">2인분</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                                <select name=\"recipeCriteriaByCookingTime\" id=\"recipeCriteriaByCookingTime\">\r\n");
      out.write("                                    <option value=\"1\">15분소요</option>\r\n");
      out.write("                                    <option value=\"2\">30분소요</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("                <div class=\"recipeInsertSteps\">\r\n");
      out.write("                    <h2>단계별 설명</h2>\r\n");
      out.write("                    <ol id=\"recipeInsertStepsOl\">\r\n");
      out.write("\r\n");
      out.write("                    </ol>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        <footer>\r\n");
      out.write("            <ul class=\"btn-wrap\">\r\n");
      out.write("                <li><a href=\"javascript:stepInsert()\" class=\"btn white\">단계추가</a></li>\r\n");
      out.write("                <li><a href=\"javascript:saveBtnClick()\" class=\"btn primary\">저장</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </footer>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"modal\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <p>레시피 대표 이미지를 삭제하시겠습니까?</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <div class=\"btn-wrap\">\r\n");
      out.write("                    <a href=\"\" class=\"btn\">취소</a>\r\n");
      out.write("                    <a href=\"\" class=\"btn primary\">확인</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"modal\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <p>해당 레시피 단계를 삭제하시겠습니까?</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <div class=\"btn-wrap\">\r\n");
      out.write("                    <a href=\"\" class=\"btn\">취소</a>\r\n");
      out.write("                    <a href=\"\" class=\"btn primary\">확인</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"modal\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <p>필요한 재료와 도구를 확인해주세요</p>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <img src=\"/images/icons/modal/ic-food.svg\" alt=\"\">\r\n");
      out.write("                        <p>표고버섯, 찹쌀가루, 등심, 파인애플</p>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <img src=\"/images/icons/modal/ic-tool.svg\" alt=\"\">\r\n");
      out.write("                        <p>프라이팬, 불</p>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <div class=\"btn-wrap\">\r\n");
      out.write("                    <a href=\"\" class=\"btn\">취소</a>\r\n");
      out.write("                    <a href=\"\" class=\"btn primary\">확인</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
