<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.recipe">

    <insert id="insertRecipeInfo" parameterType="map">
        /* mappers.recipe.insertRecipeInfo */
        INSERT INTO TB_RECIPE(
            RECIPE_NO,
            MB_NO,
            RECIPE_NM,
            RECIPE_MAIN_IMAGE_ID,
            RECIPE_EXPLANATION,
            RECIPE_CRITERIA_BY_COOKING_TIME,
            RECIPE_CRITERIA_BY_COOKING_SERVING,
            RECIPE_CATEGORY_BY_OCCASION,
            RECIPE_CRITERIA_BY_TYPE,
            RECIPE_REGISTER_DATE,
            RECIPE_REGISTER_IP,
            RECIPE_UPDATE_DATE,
            RECIPE_UPDATE_IP
        )
        VALUES(
            #{recipeNo},
            #{mbNo},
            #{recipeNm},
            #{recipeMainImageId},
            #{recipeExplanation},
            #{recipeCriteriaByCookingTime},
            #{recipeCriteriaByCookingServing},
            #{recipeCategoryByOccasion},
            #{recipeCategoryByType},
            NOW(),
            #{userIp},
            NOW(),
            #{userIp}
        )
    </insert>

    <select id="selectNextRecipeNo" resultType="string">
        /* mappers.recipe.selectNextRecipeNo */
        SELECT IFNULL(MAX(RECIPE_NO), 0) + 1
        FROM TB_RECIPE
    </select>

    <insert id="insertCookingProcess" parameterType="map">
        /* mappers.recipe.insertCookingProcess */
        INSERT INTO TB_COOKING_PROCESS(
            RECIPE_NO,
            RECIPE_STEP_NO,
            RECIPE_STEP_IMAGE_ID,
            RECIPE_STEP_EXPLANATION,
            RECIPE_STEP_INGREDIENTS,
            RECIPE_STEP_TOOLS,
            RECIPE_STEP_TIPS,
            RECIPE_STEP_TIMER,
            RECIPE_STEP_REGISTER_DATE,
            RECIPE_STEP_REGISTER_IP,
            RECIPE_STEP_UPDATE_DATE,
            RECIPE_STEP_UPDATE_IP
        )
        VALUES(
            #{recipeNo},
            #{recipeStepNo},
            #{recipeStepImageId},
            #{recipeStepExplanation},
            #{recipeStepIngredients},
            #{recipeStepTools},
            #{recipeStepTips},
            #{recipeStepTimer},
            NOW(),
            #{userIp},
            NOW(),
            #{userIp}
        )
    </insert>

    <select id="selectWrittenRecipeList" parameterType="map" resultType="map">
        /* mappers.recipe.selectWrittenRecipeList */
        SELECT
            TR.RECIPE_NO,
            TMI.MB_NM,
            TR.RECIPE_MAIN_IMAGE_ID,
            TR.RECIPE_NM,
            IFNULL(ROUND(AVG(TRR.RECIPE_RATING_SCORE), 1), 0.0) AS RATING
        FROM TB_RECIPE TR
                 INNER JOIN TB_MEMBERS_INFO TMI ON TR.MB_NO = TMI.MB_NO
                 LEFT JOIN TB_RECIPE_RATING TRR ON TR.RECIPE_NO = TRR.RECIPE_NO
        WHERE TR.MB_NO = #{userId}
        GROUP BY TR.RECIPE_NO,
                 TMI.MB_NM,
                 TR.RECIPE_MAIN_IMAGE_ID,
                 TR.RECIPE_NM
    </select>

    <select id="selectOptimalRecipeList" parameterType="map" resultType="map">
        /* mappers.recipe.selectOptimalRecipeList */
        SELECT
            TR.RECIPE_NO,
            TMI.MB_NM,
            TMI.MB_NO,
            TR.RECIPE_MAIN_IMAGE_ID,
            TR.RECIPE_NM,
            IFNULL(ROUND(AVG(TRR.RECIPE_RATING_SCORE), 1), 0.0) AS RATING
        FROM TB_RECIPE TR
                 INNER JOIN TB_MEMBERS_INFO TMI ON TR.MB_NO = TMI.MB_NO
                 LEFT JOIN TB_RECIPE_RATING TRR ON TR.RECIPE_NO = TRR.RECIPE_NO
        WHERE 1=1
        <!-- AND TR.MB_NO = #{userId} -->
        GROUP BY TR.RECIPE_NO,
                 TMI.MB_NM,
                 TMI.MB_NO,
                 TR.RECIPE_MAIN_IMAGE_ID,
                 TR.RECIPE_NM
    </select>

    <select id="selectWrittenRecipeCount" parameterType="map" resultType="string">
        /* mappers.recipe.selectWrittenRecipeCount */
        SELECT COUNT(*) CNT
        FROM TB_RECIPE TR
        WHERE TR.MB_NO = #{userId}
    </select>

    <select id="selectBookmarkCountByMbNo" parameterType="string" resultType="string">
        /* mappers.recipe.selectBookmarkCountByMbNo */
        SELECT COUNT(*)
        FROM TB_USER_BOOKMARK
        WHERE MB_NO = #{mbNo}
    </select>

    <select id="selectDetailRecipeInfo" parameterType="map" resultType="map">
        /* mappers.recipe.selectDetailRecipeInfo */
        SELECT
            TR.MB_NO,
            TR.RECIPE_NO,
            TR.RECIPE_MAIN_IMAGE_ID,
            TR.RECIPE_NM, -- 레시피 명
            TR.RECIPE_EXPLANATION, -- 레시피 설명
            TR.RECIPE_CRITERIA_BY_COOKING_SERVING, -- 몇 인분
            TR.RECIPE_CRITERIA_BY_COOKING_TIME, -- 소요시간
            TR.RECIPE_CATEGORY_BY_OCCASION,
            TR.RECIPE_CRITERIA_BY_TYPE,
            IFNULL(ROUND(AVG(TRR.RECIPE_RATING_SCORE), 1), 0.0) AS RATING, -- 평점
            CASE GROUP_CONCAT(TCP.RECIPE_STEP_INGREDIENTS SEPARATOR ',')
                WHEN ',' THEN ''
                ELSE GROUP_CONCAT(TCP.RECIPE_STEP_INGREDIENTS SEPARATOR ',')
                END AS RECIPE_STEP_INGREDIENTS, -- 재료 문자열
            CASE GROUP_CONCAT(TCP.RECIPE_STEP_TOOLS SEPARATOR ',')
                WHEN ',' THEN ''
                ELSE GROUP_CONCAT(TCP.RECIPE_STEP_TOOLS SEPARATOR ',')
                END AS RECIPE_STEP_TOOLS -- 도구 문자열

        FROM    TB_RECIPE TR
                    LEFT JOIN TB_RECIPE_RATING TRR ON TR.RECIPE_NO = TRR.RECIPE_NO
                    INNER JOIN TB_COOKING_PROCESS TCP ON TR.RECIPE_NO = TCP.RECIPE_NO
        WHERE 1=1
        AND TR.RECIPE_NO = #{recipeNo}
        AND TR.MB_NO = #{mbNo}

        GROUP BY TR.RECIPE_NO,
                 TR.RECIPE_MAIN_IMAGE_ID,
                 TR.RECIPE_NM,
                 TR.RECIPE_EXPLANATION,
                 TR.RECIPE_CRITERIA_BY_COOKING_SERVING,
                 TR.RECIPE_CRITERIA_BY_COOKING_TIME
    </select>

    <select id="selectRecipeStepList" parameterType="string" resultType="map">
        /* mappers.recipe.selectRecipeStepList */
        SELECT RECIPE_NO,
               RECIPE_STEP_NO,
               RECIPE_STEP_IMAGE_ID,
               RECIPE_STEP_EXPLANATION,
               RECIPE_STEP_TIPS,
               RECIPE_STEP_TIMER,
               RECIPE_STEP_TOOLS,
               RECIPE_STEP_INGREDIENTS
        FROM TB_COOKING_PROCESS
        WHERE 1=1
        AND RECIPE_NO = #{recipeNo}
    </select>

    <select id="selectNextRecipeStepNo" parameterType="string" resultType="string">
        /* mappers.recipe.selectNextRecipeStepNo */
        SELECT IFNULL(MAX(RECIPE_RATING_NO), 0) + 1
        FROM TB_RECIPE_RATING
        WHERE RECIPE_NO = #{recipeNo}
    </select>

    <insert id="insertRecipeReview" parameterType="map">
        /* mappers.recipe.insertRecipeReview */
        INSERT INTO TB_RECIPE_RATING(RECIPE_NO,
                                     RECIPE_RATING_NO,
                                     MB_NO,
                                     RECIPE_RATING_SCORE,
                                     RECIPE_RATING_REGISTER_DATE,
                                     RECIPE_RATING_REGISTER_IP,
                                     RECIPE_RATING_UPDATE_DATE,
                                     RECIPE_RATING_UPDATE_IP)
        VALUES(
                #{recipeNo},
                #{recipeRatingNo},
                #{userId},
                #{ratingScore},
                NOW(),
                #{userIp},
                NOW(),
                #{userIp}
              )
    </insert>

    <update id="updateRecipeInfo" parameterType="map">
        /* mappers.recipe.updateRecipeInfo */
        UPDATE TB_RECIPE
        SET  RECIPE_NM = #{recipeTitle},
             <if test="recipeMainImageId != null">
                 RECIPE_MAIN_IMAGE_ID = #{recipeMainImageId},
             </if>
             RECIPE_EXPLANATION = #{recipeMainDescription},
             RECIPE_CRITERIA_BY_COOKING_TIME = #{recipeCriteriaByCookingTime},
             RECIPE_CRITERIA_BY_COOKING_SERVING = #{recipeCriteriaByCookingServing},
             RECIPE_CATEGORY_BY_OCCASION = #{recipeCategoryByOccasion},
             RECIPE_CRITERIA_BY_TYPE = #{recipeCategoryByType},
             RECIPE_UPDATE_DATE = NOW(),
             RECIPE_UPDATE_IP = #{userIp}
        WHERE 1=1
        AND MB_NO = #{mbNo}
        AND RECIPE_NO = #{recipeNo}
    </update>

    <delete id="deleteRecipeSteps" parameterType="string">
        /* mappers.recipe.deleteRecipeSteps */
        DELETE
        FROM TB_COOKING_PROCESS
        WHERE RECIPE_NO = #{recipeNo}
    </delete>

    <select id="selectRecipeRegistrantByRecipeNo" parameterType="string" resultType="string">
        /* mappers.recipe.selectRecipeRegistrantByRecipeNo */
        SELECT MB_NO
        FROM TB_RECIPE
        WHERE RECIPE_NO = #{recipeNo}
    </select>

    <select id="selectBookmarkRecipeListByMbNo" parameterType="string" resultType="map">
        SELECT TR.RECIPE_NO,
               TMI.MB_NO,
               TR.RECIPE_MAIN_IMAGE_ID,
               TR.RECIPE_NM,
               IFNULL(ROUND(AVG(TRR.RECIPE_RATING_SCORE), 1), 0.0) AS RATING
        FROM TB_USER_BOOKMARK TUB
                 INNER JOIN TB_RECIPE TR ON TUB.RECIPE_NO = TR.RECIPE_NO
                 INNER JOIN TB_MEMBERS_INFO TMI on TR.MB_NO = TMI.MB_NO
                 INNER JOIN TB_RECIPE_RATING TRR ON TR.RECIPE_NO = TRR.RECIPE_NO
        WHERE TUB.MB_NO = #{mbNo}
        GROUP BY TR.RECIPE_NO, TMI.MB_NO, TR.RECIPE_MAIN_IMAGE_ID, TR.RECIPE_NM
    </select>

</mapper>